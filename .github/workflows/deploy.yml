name: Deploy

on:
  push:
    branches: [main]

env:
  PROJECT_ID: data-warehouse-369301
  GAR_LOCATION: asia-east1
  REPOSITORY: ds-flow
  IMAGE: prefect
  PYTHON_VERSION: 3.11

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - uses: pre-commit/action@v3.0.1

  build-image:
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 'Docker build'
      run: |
        docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}" .

    - name: 'Docker login'
      uses: 'docker/login-action@v2'
      with:
        registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
        username: _json_key
        password: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: 'Docker push'
      run: |
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}"

  list-flows:
    needs: build-image
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix=$(find src/flows -name '*.py' | sed '/__init__.py/d' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  deploy:
    needs: list-flows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flows: ${{ fromJson(needs.list-flows.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Set Python path
        run: echo "PYTHONPATH=${{ github.workspace }}/src" >> $GITHUB_ENV

      - name: Cache dependencies
        uses: actions/cache@v3.2.4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install pip dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - id: login-prefect
        run: |
          prefect config set PREFECT_API_KEY=${{ secrets.PREFECT_API_KEY }}
          prefect config set PREFECT_API_URL=${{ secrets.PREFECT_API_URL }}

      - id: flow
        run: |
          export FLOW_NAME=$(basename ${{ matrix.flows }} .py)
          echo "entrypoint=${{ matrix.flows }}:$FLOW_NAME" >> $GITHUB_OUTPUT

      - run: |
          prefect deployment build ${{ steps.flow.outputs.entrypoint }} -n main -q cloud_run \
          -sb github/ds-flow -ib cloud-run-job/ds -a
